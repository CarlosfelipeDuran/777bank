Dados - Dados referem-se a qualquer informação capturada e armazenada sobre uma pessoa, um lugar, uma coisa ou um objeto, chamada de entidade, bem como os atributos dessa entidade. https://azure.microsoft.com/pt-br/resources/cloud-computing-dictionary/what-are-databases
Banco de dados - É uma forma organizada de armazenamento de dados dentro da sistemática virtual aquela que se encontra no campo abstrato onde não existe na vida real de forma concreta, apenas no campo virtual, como já explicado acima é onde se armazena as infromações pessoaais de varios individuos https://azure.microsoft.com/pt-br/resources/cloud-computing-dictionary/what-are-databases
Sistema de Armazenamento - Os sistemas de arquivos são componentes essenciais dos sistemas de computação. Eles fornecem a base para organização de dados, armazenamento e recuperação, garantindo uma operação perfeita.                                                                                                                    https://www.kingston.com/br/blog/personal-storage/understanding-file- ystems#:~:text=Os%20sistemas%20de%20arquivos%20s%C3%A3o,recupera%C3%A7%C3%A3o%2C%20garantindo%20uma%20opera%C3%A7%C3%A3o%20perfeita.
Algoritimo - Um algoritmo é uma sequência de instruções bem definidas, normalmente usadas para resolver problemas de matemática específicos, executar tarefas, ou para realizar cálculos e equações. https://rockcontent.com/br/blog/algoritmo/
Nuvem - é um termo utilizado para descrever uma rede global de servidores, cada um com uma função única. A nuvem não é uma entidade física, mas uma vasta rede de servidores remotos ao redor do globo que são conectados e operam como um único ecossistema. https://azure.microsoft.com/pt-br/resources/cloud-computing-dictionary/what-is-the-cloud/#:~:text=A%20defini%C3%A7%C3%A3o%20de%20nuvem%20pode,operam%20como%20um%20%C3%BAnico%20ecossistema.
NOVA APRESENTAÇÃO 
  A) Os Data Centers, também chamado de Centro de Processamento de Dados, estão incluídos nas adequações da Lei Geral de Proteção de Dados (LGPD), assim podendo concluir que a LGPD regula os data centers. A Lei Geral de Proteção de Dados (LGPD) obriga as organizações a serem mais responsáveis com o gerenciamento das informações armazenadas. Esse aspecto mostra a necessidade de um cuidado especial com a administração do Data Center. ao operar ou contratar data centers no exterior, as empresas brasileiras precisam garantir que estão em conformidade com a LGPD, seja por meio da adequação do país de destino, cláusulas contratuais específicas ou outras garantias adequadas para a proteção dos dados pessoais tendo em vista que os dados armazenados sao de brasileiros.
B) E B1) Sobre o formato dos arquivos - Os arquivos de dados podem ser classificados como proprietários ou abertos, dependendo do formato e da acessibilidade dos dados. Dados Proprietários - são aqueles que pertencem a uma empresa ou entidade específica e não têm especificações abertas ou acessíveis ao público. Geralmente, esses formatos são usados por softwares específicos e podem não ser facilmente intercambiáveis com outros sistemas. Alguns exemplos - .docx (Microsoft Word): é um formato proprietário da Microsoft. .xlsx (Microsoft Excel): Formato de planilhas da Microsoft, proprietário.pst (Microsoft Outlook):Formato de arquivo de dados do Outlook para armazenar emails e outros dados. .mdb (Microsoft Access): Formato de banco de dados da Microsoft Access. Importante ressaltar que os formatos proprietários podem exigir o uso de software específico para abrir e editar os arquivos. Além disso, podem não ser suportados por outros aplicativos ou ferramentas que não sejam da mesma empresa. - Dados Abertos - são formatos que são especificados publicamente e que podem ser usados por qualquer pessoa, sem a necessidade de um software específico. Eles são geralmente criados para promover a interoperabilidade e facilitar o acesso e o compartilhamento de dados. Exemplos incluem: .csv (Comma-Separated Values): Um formato simples para armazenar dados tabulares em texto plano, amplamente suportado por diversas ferramentas e programas. .json (JavaScript Object Notation): Formato de intercâmbio de dados baseado em texto, muito usado em APIs e comunicação entre sistemas. .xml (eXtensible Markup Language): Formato de markup para armazenar e transportar dados, suportado por muitas plataformas e ferramentas. .txt (Plain Text): Arquivo de texto simples que pode ser aberto e editado com qualquer editor de texto. Além desses, outros formatos abertos incluem .odt (Open Document Text) e .ods (Open Document Spreadsheet), que são utilizados pelo formato OpenDocument e são suportados por várias suítes de escritório, como LibreOffice e Apache OpenOffice.
B2)  Dados públicos referem-se a informações que são coletadas, mantidas e disponibilizadas por entidades governamentais ou outras instituições públicas e que estão acessíveis ao público em geral. dados que não estão sujeitos a limitações válidas de privacidade, segurança ou controle de acesso, reguladas por estatutos. A disponibilização desses dados pode ter várias implicações, tanto positivas quanto negativas. A Implicaçõo para Dados Públicos: Acessibilidade: Dados em formatos abertos podem ser acessados por uma ampla gama de ferramentas e softwares gratuitos ou de baixo custo, facilitando o acesso público e a participação cívica. Transparência: Formatos abertos promovem maior transparência, pois as especificações do formato são públicas e podem ser examinadas e verificadas por qualquer pessoa. Isso contribui para a confiança pública na integridade dos dados. ja no Formatos Proprietários: Acessibilidade limitada: Arquivos em formatos proprietários, como DOCX (.docx), XLSX (.xlsx), e PST (.pst), geralmente exigem software específico para serem acessados. Isso pode criar barreiras para aqueles que não têm acesso ao software necessário, limitando a capacidade de acesso público aos dados. O software necessário pode ter custos associados, e pode haver restrições de licenciamento que dificultam a abertura e manipulação dos arquivos por terceiros. e possui uma menor Transparência ao publico geral. Assim . A escolha de formatos abertos promove um ambiente mais inclusivo e colaborativo, permitindo que os dados sejam amplamente utilizados e analisados. Por outro lado, formatos proprietários podem criar barreiras ao acesso e limitar a capacidade de reutilização dos dados, o que pode ser um obstáculo para a transparência e a participação cidadã, com isso ao tornar dados públicos disponíveis, é crucial considerar como o formato escolhido pode impactar a capacidade dos usuários de acessar, entender e utilizar as informações de maneira eficaz.


1. Python Diferenças:Sintaxe Simples: Python tem uma sintaxe limpa e fácil de ler, o que a torna uma ótima linguagem para iniciantes. Tipagem Dinâmica: Não é necessário declarar o tipo de uma variável. O Python determina o tipo automaticamente.Uso Geral: É usada para uma ampla gama de aplicações, desde scripts simples até sistemas complexos e aprendizado de máquina. 2. Java Diferenças:Sintaxe Verbose: Java tem uma sintaxe mais detalhada e é fortemente tipada. É mais rigorosa em termos de declaração de tipos e estrutura. Compilação: O código Java é compilado em bytecode que roda na Java Virtual Machine (JVM), permitindo portabilidade entre diferentes plataformas. Orientação a Objetos: Java é uma linguagem orientada a objetos, o que significa que quase tudo é tratado como um objeto. 3. JavaScript Diferenças: Desenvolvimento Web: JavaScript é amplamente usado para desenvolvimento web, tanto no lado do cliente quanto no lado do servidor (com Node.js). Tipagem Dinâmica: Similar ao Python, JavaScript é dinamicamente tipado. Execução em Navegadores: JavaScript é executado diretamente no navegador, o que o torna essencial para desenvolvimento front-end. Resumo das Principais Diferenças - Python: Simples e legível, Versátil, ideal para scripts, automação e ciência de dados, utilizado para interpretação.  Java: Verboso e estrito, Aplicações empresariais e móveis,utilizado paracompilação para bytecode e execução na JVM. JavaScript: Flexível e integrado com HTML/CSS, Desenvolvimento web front-end e back-end, utilizado para Execução no navegador e servidor (Node.js).

exemplo de codigo python : print('Hello world!') 

exemplo de codigo java: import java.util.*;
import java.lang.*;
import java.io.*;

// The main method must be in a class named "Main".
class Main {
    public static void main(String[] args) {
        System.out.println("Hello world!");
    }
}
exemplo de codigo javaScript: console.log("Hello world!");


Estrutura de Repetição:

1ª) for i in range(7):
  print (i)

2º) count = 3
while count < 2:
    print (conut)
    count +=1

Estrutura de Tomada de Decisão:

1ª) x = 10
if x > 10:
    print("x é maior que 10")
elif x ==10:
    print ("x é igual a 10")

2ª)x = 3
if x> 9:
    print("x é maior que 9")
elif x == 9:
    print("x é igual a 9")
else:
    print("x é menor que 9")

def bubble_sort(arr):
    n = len(arr)
    # Percorre todos os elementos do array
    for i in range(n):
        # Últimos i elementos já estão na posição correta
        for j in range(0, n - i - 1):
            # Percorre o array do início até o penúltimo elemento não ordenado
            if arr[j] > arr[j + 1]:
                # Troca se o elemento encontrado for maior que o próximo elemento
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

# Exemplo de uso
lista = [64, 34, 25, 12, 22, 11, 90]
sorted_lista = bubble_sort(lista)
print("Lista ordenada:", sorted_lista)


# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
print("Try programiz.pro")
def extrair_vogais(texto):
    # Definindo o conjunto de vogais
    vogais = "aeiouAEIOU"
    # Filtrando e coletando as vogais presentes no texto
    vogais_encontradas = [char for char in texto if char in vogais]
    # Retornando a lista de vogais encontradas como uma string
    return ''.join(vogais_encontradas)

# Exemplo de uso
texto = "Sol radiante, risos vibrantes!"
vogais = extrair_vogais(texto)
print("Vogais encontradas:", vogais)
Try programiz.pro
Vogais encontradas: oaiaeioiae

=== Code Execution Successful ===


todos os codigos ficam 
Try programiz.pro
Vogais encontradas: oaiaeioiae
Lista ordenada: [11, 12, 22, 25, 34, 64, 90]

=== Code Execution Successful ===

segue link com codigos de forma separada e prints em links https://github.com/CarlosfelipeDuran/777bank/blob/main/vogais   /    
